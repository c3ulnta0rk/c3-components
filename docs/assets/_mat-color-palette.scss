@use "sass:map";
@use "sass:meta";
@use "@angular/material" as mat;
@use "utils" as utils;

@mixin color-palette($theme) {
  $config: mat.m2-get-color-config($theme);
  $is-dark: map.get($config, is-dark);

  .white {
    background-color: white;
    color: black;
  }

  .black {
    background-color: black;
    color: white;
  }

  .primary {
    $color: utils.get-color-from-palette(
      map.get($config, primary),
      if($is-dark, 500, 600)
    );
    background-color: $color;
    color: utils.get-contrast-color-from-palette(
      map.get($config, primary),
      if($is-dark, 500, 600)
    );
  }

  .accent {
    $color: utils.get-color-from-palette(
      map.get($config, accent),
      if($is-dark, 500, 700)
    );
    background-color: $color;
    color: utils.get-contrast-color-from-palette(
      map.get($config, accent),
      if($is-dark, 500, 700)
    );
  }

  .warn {
    $color: utils.get-color-from-palette(
      map.get($config, warn),
      if($is-dark, 500, 700)
    );
    background-color: $color;
    color: utils.get-contrast-color-from-palette(
      map.get($config, warn),
      if($is-dark, 500, 700)
    );
  }

  $colors-name: (
    "red": mat.$m2-red-palette,
    "pink": mat.$m2-pink-palette,
    "purple": mat.$m2-purple-palette,
    "deep-purple": mat.$m2-deep-purple-palette,
    "indigo": mat.$m2-indigo-palette,
    "blue": mat.$m2-blue-palette,
    "light-blue": mat.$m2-light-blue-palette,
    "cyan": mat.$m2-cyan-palette,
    "teal": mat.$m2-teal-palette,
    "green": mat.$m2-green-palette,
    "light-green": mat.$m2-light-green-palette,
    "lime": mat.$m2-lime-palette,
    "yellow": mat.$m2-yellow-palette,
    "amber": mat.$m2-amber-palette,
    "orange": mat.$m2-orange-palette,
    "deep-orange": mat.$m2-deep-orange-palette,
    "brown": mat.$m2-brown-palette,
    "grey": mat.$m2-grey-palette,
    "blue-grey": mat.$m2-blue-grey-palette,
  );

  $variante: "", 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, A100, A200,
    A400, A700;

  @each $name, $value in $colors-name {
    .#{$name} {
      $color: utils.get-color-from-palette($value, if($is-dark, 500, 700));
      background-color: $color;
      color: utils.get-contrast-color-from-palette(
        $value,
        if($is-dark, 500, 700)
      );
    }

    .#{$name}-important {
      $color: utils.get-color-from-palette($value, if($is-dark, 500, 700));
      background-color: $color !important;
      color: utils.get-contrast-color-from-palette(
        $value,
        if($is-dark, 500, 700)
      ) !important;
    }

    @each $v in $variante {
      .#{$name}#{$v} {
        $color: utils.get-color-from-palette($value, $v);
        background-color: $color;
        color: utils.get-contrast-color-from-palette($value, $v);
      }

      .#{$name}#{$v}-important {
        $color: utils.get-color-from-palette($value, $v);
        background-color: $color !important;
        color: utils.get-contrast-color-from-palette($value, $v) !important;
      }
    }
  }

  @each $name, $value in $colors-name {
    .text-#{$name} {
      $color: utils.get-color-from-palette($value, if($is-dark, 500, 700));
      color: $color;
    }

    @each $v in $variante {
      .text-#{$name}#{$v} {
        $color: utils.get-color-from-palette($value, $v);
        color: $color;
      }
    }
  }
}
