@use "sass:map"
@use "sass:meta"
@use "@angular/material" as mat
@function get-contrast-color-from-palette($palette, $hue)
  @return map.get(map.get($palette, contrast), $hue)

@function get-color-from-palette($palette, $hue: default, $opacity: null)
  // If hueKey is a number between zero and one, then it actually contains an
  // opacity value, so recall this function with the default hue and that given opacity.
  @if meta.type-of($hue) ==number and $hue>=0 and $hue <=1
    @return get-color-from-palette($palette, default, $hue)

  $color: map.get($palette, $hue)

  @if (meta.type-of($color) !=color)
    // If the $color resolved to something different from a color (e.g. a CSS variable),
    // we can't apply the opacity anyway so we return the value as is, otherwise Sass can
    // throw an error or output something invalid.
    @return $color

  @return rgba($color, if($opacity==null, opacity($color), $opacity))

@function get-color-config($theme, $default: null)
  @if map.has-key($theme, color)
    @return map.get($theme, color)

  @return $default
